import requests
from bs4 import BeautifulSoup
import telebot
from telebot import types

token = '6465392718:AAH3wMYGQQ2LtPO1dQaRZHSAw_yj0kxkgPI'


bot = telebot.TeleBot(token)
#–ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–≥–æ–¥–Ω—ã–π –±–æ—Ç, —É –º–µ–Ω—è –≤ –Ω–∞–ª–∏—á–∏–∏ 3 –£–∫—Ä–∞–∏–Ω—Å–∫–∏—Ö –≥–æ—Ä–æ–¥–∞, –Ω–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É /weather –∏ –≤—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥, —á—Ç–æ-–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É')

 #–ü–æ–≥–æ–¥–∞ –≤ –ö–∏–µ–≤–µ
def weather_parse_Kiev():
    url_Kiev = 'https://meteoscope.net/ua/weather/kyiv-182847?param=ads_search&gad_source=1&gclid=Cj0KCQjw4MSzBhC8ARIsAPFOuyX0Upj-NKOaTYTe_7fPxd_VVtTVg5Ee_4M4Z4D_MbsRUU_v-Ys26sgaAp9dEALw_wcB'
    r = requests.get(url_Kiev)
    soup = BeautifulSoup(r.text, 'html.parser')
    weather_Kiev = soup.find('p', class_='weather-description').text.strip()
    temperature = soup.find('p', class_='current-temperature').text.strip()
    time = soup.find('span', class_='current-time').text.strip()
    return weather_Kiev, temperature, time
# –ü–æ–≥–æ–¥–∞ –≤ –î–Ω–µ–ø—Ä–µ
def weather_parse_Dnipro():
    url_Dnipro = "https://meteoscope.net/ua/weather/dnipro-18770"
    r = requests.get(url_Dnipro)
    soup = BeautifulSoup(r.text, 'html.parser')
    weather_Dnipro = soup.find('p', class_='weather-description').text.strip()
    temperature_Dnipro = soup.find('p', class_='current-temperature').text.strip()
    time1 = soup.find('span', class_='current-time').text.strip()
    return weather_Dnipro, temperature_Dnipro, time1
#–ü–æ–≥–æ–¥–∞ –≤ –ü–æ–ª—Ç–∞–≤–µ
def weather_parse_Poltava():
    url_Poltava = "https://meteoscope.net/ua/weather/poltava-28110"
    r = requests.get(url_Poltava)
    soup = BeautifulSoup(r.text, 'html.parser')
    weather_Poltava = soup.find('p', class_='weather-description').text.strip()
    temperature_Poltava = soup.find('p', class_='current-temperature').text.strip()
    time2 = soup.find('span', class_='current-time').text.strip()
    return weather_Poltava, temperature_Poltava, time2
@bot.message_handler(commands=['weather'])
def weather(message):
    markup = types.ReplyKeyboardMarkup(row_width=3, resize_keyboard=True)
    btn1 = types.KeyboardButton('–ö–∏–µ–≤')
    btn2 = types.KeyboardButton('–î–Ω–µ–ø—Ä')
    btn3 = types.KeyboardButton('–ü–æ–ª—Ç–∞–≤–∞')
    markup.add(btn1, btn2, btn3)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥:", reply_markup=markup)

@bot.message_handler(func=lambda message: message.text in ['–ö–∏–µ–≤', '–î–Ω–µ–ø—Ä', '–ü–æ–ª—Ç–∞–≤–∞'])
def send_weather(message):
    city = message.text
    if city == '–ö–∏–µ–≤':
        weather_Kiev, temperature, time = weather_parse_Kiev()
        bot.send_message(message.chat.id, f'–ü–æ–≥–æ–¥–∞ –≤ –ö–∏–µ–≤–µ: –í—Ä–µ–º—è –Ω–∞ –º–æ–º–µ–Ω—Ç –≤—ã—á–∏—Å–ª–µ–Ω–∏–π‚åö: {time}, –ü–æ–≥–æ–¥–∞üåß: {weather_Kiev}, –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞üå°: {temperature} ')
    elif city == '–î–Ω–µ–ø—Ä':
        weather_Dnipro, temperature_Dnipro, time1 = weather_parse_Dnipro()
        bot.send_message(message.chat.id, f'–ü–æ–≥–æ–¥–∞ –≤ –î–Ω–µ–ø—Ä–µ: –í—Ä–µ–º—è –Ω–∞ –º–æ–º–µ–Ω—Ç –≤—ã—á–∏—Å–ª–µ–Ω–∏–π‚åö: {time1}, –ü–æ–≥–æ–¥–∞üåß: {weather_Dnipro}, –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞üå°: {temperature_Dnipro}')
    elif city == '–ü–æ–ª—Ç–∞–≤–∞':
        weather_Poltava, temperature_Poltava, time2 = weather_parse_Poltava()
        bot.send_message(message.chat.id, f'–ü–æ–≥–æ–¥–∞ –≤ –ü–æ–ª—Ç–∞–≤–µ: –í—Ä–µ–º—è –Ω–∞ –º–æ–º–µ–Ω—Ç –≤—ã—á–∏—Å–ª–µ–Ω–∏–π‚åö: {time2}, –ü–æ–≥–æ–¥–∞üåß: {weather_Poltava}, –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞üå°: {temperature_Poltava}')

weather_parse_Kiev()
weather_parse_Dnipro()
weather_parse_Poltava()

bot.polling()